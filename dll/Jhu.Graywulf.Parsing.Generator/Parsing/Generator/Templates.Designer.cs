//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jhu.Graywulf.Parsing.Generator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Templates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Templates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Jhu.Graywulf.Parsing.Generator.Templates", typeof(Templates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public abstract partial class __Name__ : __InheritedType__, ICloneable
        ///    {
        ///        public __Name__()
        ///            :base()
        ///        {
        ///        }
        ///
        ///        public __Name__(params __LibNamespace__.Token[] tokens)
        ///            :base(tokens)
        ///        {
        ///        }
        ///
        ///        public __Name__(__Namespace__.__Name__ old)
        ///            :base(old)
        ///        {
        ///        }
        ///    }.
        /// </summary>
        internal static string AbstractRule {
            get {
                return ResourceManager.GetString("AbstractRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public partial class __Name__ : __LibNamespace__.Comment, ICloneable
        ///    {
        ///        private static Regex pattern = new Regex(@&quot;__Pattern__&quot;, RegexOptions.Compiled);
        ///
        ///        protected override Regex Pattern
        ///        {
        ///            get { return pattern; }
        ///        }
        ///
        ///        public __Name__()
        ///            :base()
        ///        {
        ///        }
        ///
        ///        public __Name__(__Name__ old)
        ///            :base(old)
        ///        {
        ///        }
        ///
        ///        public override object Clone()
        ///        {
        ///            return new __N [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Comment {
            get {
                return ResourceManager.GetString("Comment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         public override bool Match(__LibNamespace__.Parser parser)
        ///        {
        ///            bool res = true;
        ///
        ///__Code__
        ///
        ///            return res;
        ///        }.
        /// </summary>
        internal static string Match {
            get {
                return ResourceManager.GetString("Match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Text;
        ///using System.Text.RegularExpressions;
        ///
        ///namespace __Namespace__
        ///{
        ///    public partial class __Name__ : __InheritedType__
        ///    {
        ///        private static HashSet&lt;string&gt; keywords = new HashSet&lt;string&gt;(__Comparer__)
        ///        {
        ///__Keywords__
        ///        };
        ///
        ///        public override HashSet&lt;string&gt; Keywords
        ///        {
        ///            get { return keywords; }
        ///        }   
        ///
        ///        public static StringComparer ComparerInstance
        ///        {
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Parser {
            get {
                return ResourceManager.GetString("Parser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public partial class __Name__ : __InheritedType__, ICloneable
        ///    {
        ///        public __Name__()
        ///            :base()
        ///        {
        ///        }
        ///
        ///        public __Name__(params __LibNamespace__.Token[] tokens)
        ///            :base(tokens)
        ///        {
        ///        }
        ///
        ///        public __Name__(__Namespace__.__Name__ old)
        ///            :base(old)
        ///        {
        ///        }
        ///
        ///        public override object Clone()
        ///        {
        ///            return new __Namespace__.__Name__(this);
        ///        }
        ///
        ///__Match__
        ///    }.
        /// </summary>
        internal static string Rule {
            get {
                return ResourceManager.GetString("Rule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public partial class __Name__ : __LibNamespace__.Symbol, ICloneable
        ///    {
        ///        protected override string Pattern
        ///        {
        ///            get { return @&quot;__Pattern__&quot;; }
        ///        }
        ///
        ///        public __Name__()
        ///            :base()
        ///        {
        ///            Value = @&quot;__Pattern__&quot;;
        ///        }
        ///
        ///        public __Name__(__Name__ old)
        ///            :base(old)
        ///        {
        ///        }
        ///
        ///        public static __Name__ Create()
        ///        {
        ///            var s = new __Name__();
        ///            s.Value = @&quot;__Pattern__&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Symbol {
            get {
                return ResourceManager.GetString("Symbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public partial class __Name__ : __LibNamespace__.Terminal, ICloneable
        ///    {
        ///        private static Regex pattern = new Regex(@&quot;__Pattern__&quot;, RegexOptions.Compiled);
        ///
        ///        protected override Regex Pattern
        ///        {
        ///            get { return pattern; }
        ///        }
        ///
        ///        public __Name__()
        ///            :base()
        ///        {
        ///            Value = @&quot;__Pattern__&quot;;
        ///        }
        ///
        ///        public __Name__(__Name__ old)
        ///            :base(old)
        ///        {
        ///        }
        ///
        ///        public static __Name__ Create(s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Terminal {
            get {
                return ResourceManager.GetString("Terminal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     public partial class __Name__ : __LibNamespace__.Whitespace, ICloneable
        ///    {
        ///        private static Regex pattern = new Regex(@&quot;__Pattern__&quot;, RegexOptions.Compiled);
        ///
        ///        protected override Regex Pattern
        ///        {
        ///            get { return pattern; }
        ///        }
        ///
        ///        public __Name__()
        ///            :base()
        ///        {
        ///        }
        ///
        ///        public __Name__(__Name__ old)
        ///            :base(old)
        ///        {
        ///        }
        ///
        ///        public override object Clone()
        ///        {
        ///            return new  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Whitespace {
            get {
                return ResourceManager.GetString("Whitespace", resourceCulture);
            }
        }
    }
}
